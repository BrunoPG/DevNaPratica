swagger: '2.0'

info:
  version: develop-SNAPSHOT
  title: basico
  x-senior-domain: furb
  x-senior-domain-path: furb
  x-senior-service-path: basico
  contact:
    name: Senior X Platform
    url: http://dev.senior.com.br
    email: seniorx-dev@senior.com.br

host: platform.senior.com.br

basePath: /t/senior.com.br/bridge/1.0/rest/furb

securityDefinitions:
   APIKeyHeader:
     type: apiKey
     in: header
     name: Authorization

security:
  - APIKeyHeader: []

produces:
  - application/json
consumes:
  - application/json

paths:
  /basico/queries/getSalas:
    post:
      description: ""
      tags:
        - Queries
      x-senior-visibility: PRIVATE
      parameters:
        - name: input
          in: body
          required: true
          schema:
            type: object
            required:
              - idEvento
            properties:
              idEvento:
                type: string
                description: ""
      responses:
        200:
          description: Ok
          schema:
            type: object
            properties:
              salas:
                type: array
                items:
                  type: object
                  allOf:
                    $ref: '#/definitions/sala'
                description: ""
        default:
          description: Error response
          schema:
            $ref: '#/definitions/genericError'
    get:
      description: ""
      tags:
        - Queries
      x-senior-visibility: PRIVATE
      parameters:
        - name: idEvento
          description: ""
          in: query
          required: true
          type: string
      responses:
        200:
          description: Ok
          schema:
            type: object
            properties:
              salas:
                type: array
                items:
                  type: object
                  allOf:
                    $ref: '#/definitions/sala'
                description: ""
        default:
          description: Error response
          schema:
            $ref: '#/definitions/genericError'
  
  /basico/queries/getSetores:
    post:
      description: ""
      tags:
        - Queries
      x-senior-visibility: PRIVATE
      parameters:
        - name: input
          in: body
          required: true
          schema:
            type: object
            required:
              - idEvento
            properties:
              idEvento:
                type: string
                description: ""
      responses:
        200:
          description: Ok
          schema:
            type: object
            properties:
              setores:
                type: array
                items:
                  type: object
                  allOf:
                    $ref: '#/definitions/setor'
                description: ""
        default:
          description: Error response
          schema:
            $ref: '#/definitions/genericError'
    get:
      description: ""
      tags:
        - Queries
      x-senior-visibility: PRIVATE
      parameters:
        - name: idEvento
          description: ""
          in: query
          required: true
          type: string
      responses:
        200:
          description: Ok
          schema:
            type: object
            properties:
              setores:
                type: array
                items:
                  type: object
                  allOf:
                    $ref: '#/definitions/setor'
                description: ""
        default:
          description: Error response
          schema:
            $ref: '#/definitions/genericError'
  
  /basico/queries/getMetadata:
    post:
      description: "Default 'getMetadata' query. Every service must handle this command and return metadata in the format requested."
      tags:
        - Queries
      x-senior-visibility: PRIVATE
      parameters:
        - name: input
          in: body
          required: true
          schema:
            type: object
            properties:
              metadataFormat:
                type: string
                description: ""
      responses:
        200:
          description: Ok
          schema:
            type: object
            required:
              - metadata
            properties:
              metadata:
                type: string
                description: ""
        default:
          description: Error response
          schema:
            $ref: '#/definitions/genericError'
    get:
      description: "Default 'getMetadata' query. Every service must handle this command and return metadata in the format requested."
      tags:
        - Queries
      x-senior-visibility: PRIVATE
      parameters:
        - name: metadataFormat
          description: ""
          in: query
          type: string
      responses:
        200:
          description: Ok
          schema:
            type: object
            required:
              - metadata
            properties:
              metadata:
                type: string
                description: ""
        default:
          description: Error response
          schema:
            $ref: '#/definitions/genericError'
  
  /basico/queries/exportTipo:
    post:
      description: ""
      tags:
        - Queries
      x-senior-visibility: PUBLIC
      parameters:
        - name: input
          in: body
          required: true
          schema:
            type: object
            required:
              - config
            properties:
              config:
                type: object
                allOf:
                  $ref: '#/definitions/exportConfig'
                description: ""
      responses:
        200:
          description: Ok
          schema:
            type: object
            required:
              - exportJobId
            properties:
              exportJobId:
                type: string
                description: ""
        default:
          description: Error response
          schema:
            $ref: '#/definitions/genericError'
  
  /basico/queries/exportEvento:
    post:
      description: ""
      tags:
        - Queries
      x-senior-visibility: PUBLIC
      parameters:
        - name: input
          in: body
          required: true
          schema:
            type: object
            required:
              - config
            properties:
              config:
                type: object
                allOf:
                  $ref: '#/definitions/exportConfig'
                description: ""
      responses:
        200:
          description: Ok
          schema:
            type: object
            required:
              - exportJobId
            properties:
              exportJobId:
                type: string
                description: ""
        default:
          description: Error response
          schema:
            $ref: '#/definitions/genericError'
  
  /basico/queries/exportSala:
    post:
      description: ""
      tags:
        - Queries
      x-senior-visibility: PUBLIC
      parameters:
        - name: input
          in: body
          required: true
          schema:
            type: object
            required:
              - config
            properties:
              config:
                type: object
                allOf:
                  $ref: '#/definitions/exportConfig'
                description: ""
      responses:
        200:
          description: Ok
          schema:
            type: object
            required:
              - exportJobId
            properties:
              exportJobId:
                type: string
                description: ""
        default:
          description: Error response
          schema:
            $ref: '#/definitions/genericError'
  
  /basico/queries/exportSetor:
    post:
      description: ""
      tags:
        - Queries
      x-senior-visibility: PUBLIC
      parameters:
        - name: input
          in: body
          required: true
          schema:
            type: object
            required:
              - config
            properties:
              config:
                type: object
                allOf:
                  $ref: '#/definitions/exportConfig'
                description: ""
      responses:
        200:
          description: Ok
          schema:
            type: object
            required:
              - exportJobId
            properties:
              exportJobId:
                type: string
                description: ""
        default:
          description: Error response
          schema:
            $ref: '#/definitions/genericError'
  
  /basico/queries/getDependencies:
    post:
      description: "Returns a list with all dependencies from this service, along with their respective versions"
      tags:
        - Queries
      x-senior-visibility: PUBLIC
      responses:
        200:
          description: Ok
          schema:
            type: object
            required:
              - dependencies
            properties:
              dependencies:
                type: array
                items:
                  type: object
                  allOf:
                    $ref: '#/definitions/dependency'
                  minimum: 1
                description: "List with this service dependencies"
        default:
          description: Error response
          schema:
            $ref: '#/definitions/genericError'
    get:
      description: "Returns a list with all dependencies from this service, along with their respective versions"
      tags:
        - Queries
      x-senior-visibility: PUBLIC
      responses:
        200:
          description: Ok
          schema:
            type: object
            required:
              - dependencies
            properties:
              dependencies:
                type: array
                items:
                  type: object
                  allOf:
                    $ref: '#/definitions/dependency'
                  minimum: 1
                description: "List with this service dependencies"
        default:
          description: Error response
          schema:
            $ref: '#/definitions/genericError'
  /basico/actions/getQtdTipo:
    post:
      description: ""
      tags:
        - Actions
      x-senior-visibility: PRIVATE
      parameters:
        - name: input
          in: body
          required: true
          schema:
            type: object
            required:
              - tipo
            properties:
              tipo:
                type: object
                allOf:
                  $ref: '#/definitions/tipo'
                description: ""
      responses:
        200:
          description: Ok
          schema:
            type: object
            required:
              - qtd
            properties:
              qtd:
                type: integer
                format: int64
                description: ""
        default:
          description: Error response
          schema:
            $ref: '#/definitions/genericError'
  
  /basico/actions/getDateEvento:
    post:
      description: ""
      tags:
        - Actions
      x-senior-visibility: PRIVATE
      parameters:
        - name: input
          in: body
          required: true
          schema:
            type: object
            required:
              - idEvento
            properties:
              idEvento:
                type: string
                description: ""
      responses:
        200:
          description: Ok
          schema:
            type: object
            required:
              - data
            properties:
              data:
                type: string
                format: date
                description: ""
        default:
          description: Error response
          schema:
            $ref: '#/definitions/genericError'
  
  /basico/actions/importTipo:
    post:
      description: ""
      tags:
        - Actions
      x-senior-visibility: PUBLIC
      parameters:
        - name: input
          in: body
          required: true
          schema:
            type: object
            required:
              - config
            properties:
              config:
                type: object
                allOf:
                  $ref: '#/definitions/importConfig'
                description: ""
      responses:
        200:
          description: Ok
          schema:
            type: object
            required:
              - importJobId
            properties:
              importJobId:
                type: string
                description: ""
        default:
          description: Error response
          schema:
            $ref: '#/definitions/genericError'
  
  /basico/actions/importEvento:
    post:
      description: ""
      tags:
        - Actions
      x-senior-visibility: PUBLIC
      parameters:
        - name: input
          in: body
          required: true
          schema:
            type: object
            required:
              - config
            properties:
              config:
                type: object
                allOf:
                  $ref: '#/definitions/importConfig'
                description: ""
      responses:
        200:
          description: Ok
          schema:
            type: object
            required:
              - importJobId
            properties:
              importJobId:
                type: string
                description: ""
        default:
          description: Error response
          schema:
            $ref: '#/definitions/genericError'
  
  /basico/actions/importSala:
    post:
      description: ""
      tags:
        - Actions
      x-senior-visibility: PUBLIC
      parameters:
        - name: input
          in: body
          required: true
          schema:
            type: object
            required:
              - config
            properties:
              config:
                type: object
                allOf:
                  $ref: '#/definitions/importConfig'
                description: ""
      responses:
        200:
          description: Ok
          schema:
            type: object
            required:
              - importJobId
            properties:
              importJobId:
                type: string
                description: ""
        default:
          description: Error response
          schema:
            $ref: '#/definitions/genericError'
  
  /basico/actions/importSetor:
    post:
      description: ""
      tags:
        - Actions
      x-senior-visibility: PUBLIC
      parameters:
        - name: input
          in: body
          required: true
          schema:
            type: object
            required:
              - config
            properties:
              config:
                type: object
                allOf:
                  $ref: '#/definitions/importConfig'
                description: ""
      responses:
        200:
          description: Ok
          schema:
            type: object
            required:
              - importJobId
            properties:
              importJobId:
                type: string
                description: ""
        default:
          description: Error response
          schema:
            $ref: '#/definitions/genericError'
  /basico/entities/tipo:
    post:
      tags:
        - CRUD
      x-senior-visibility: PRIVATE
      parameters:
        - name: entity
          in: body
          required: true
          schema:
            type: object
            allOf:
              $ref: '#/definitions/tipo'
      responses:
        200:
          description: 'The created resource'
          schema:
            $ref: '#/definitions/tipo'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/genericError'
    patch:
      tags:
        - CRUD
      x-senior-visibility: PRIVATE
      parameters:
        - name: entity
          in: body
          required: true
          schema:
            type: object
            allOf:
              $ref: '#/definitions/tipo'
      responses:
        200:
          description: 'The created resource'
          schema:
            $ref: '#/definitions/tipo'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/genericError'
    get:
      tags:
        - CRUD
      x-senior-visibility: PRIVATE
      parameters:
        - name: offset
          in: query
          type: number
        - name: size
          in: query
          type: number
      responses:
        200:
          description: Ok
          schema:
            type: array
            items:
              $ref: '#/definitions/tipo'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/genericError'
  
  /basico/entities/tipo/{id}:
    put:
      tags:
        - CRUD
      x-senior-visibility: PRIVATE
      parameters:
        - name: id
          in: path
          required: true
          type: string
        - name: entity
          in: body
          required: true
          schema:
            $ref: '#/definitions/tipo'
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/tipo'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/genericError'
    patch:
      tags:
        - CRUD
      x-senior-visibility: PRIVATE
      parameters:
        - name: id
          in: path
          required: true
          type: string
        - name: entity
          in: body
          required: true
          schema:
            $ref: '#/definitions/tipo'
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/tipo'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/genericError'
    get:
      tags:
        - CRUD
      x-senior-visibility: PRIVATE
      parameters:
        - name: id
          in: path
          required: true
          type: string
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/tipo'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/genericError'
    delete:
      tags:
        - CRUD
      x-senior-visibility: PRIVATE
      parameters:
        - name: id
          in: path
          required: true
          type: string
      responses:
        200:
          description: Ok
        default:
          description: Error response
          schema:
            $ref: '#/definitions/genericError'
  
  /basico/entities/tipo/bulk:
    post:
      tags:
        - Bulk
      parameters:
        - name: entities
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/tipo'
      responses:
        200:
          description: 'The bulk creation has created resources'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/genericError'
  
  /basico/entities/evento:
    post:
      tags:
        - CRUD
      x-senior-visibility: PRIVATE
      parameters:
        - name: entity
          in: body
          required: true
          schema:
            type: object
            allOf:
              $ref: '#/definitions/evento'
      responses:
        200:
          description: 'The created resource'
          schema:
            $ref: '#/definitions/evento'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/genericError'
    patch:
      tags:
        - CRUD
      x-senior-visibility: PRIVATE
      parameters:
        - name: entity
          in: body
          required: true
          schema:
            type: object
            allOf:
              $ref: '#/definitions/evento'
      responses:
        200:
          description: 'The created resource'
          schema:
            $ref: '#/definitions/evento'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/genericError'
    get:
      tags:
        - CRUD
      x-senior-visibility: PRIVATE
      parameters:
        - name: offset
          in: query
          type: number
        - name: size
          in: query
          type: number
      responses:
        200:
          description: Ok
          schema:
            type: array
            items:
              $ref: '#/definitions/evento'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/genericError'
  
  /basico/entities/evento/{id}:
    put:
      tags:
        - CRUD
      x-senior-visibility: PRIVATE
      parameters:
        - name: id
          in: path
          required: true
          type: string
        - name: entity
          in: body
          required: true
          schema:
            $ref: '#/definitions/evento'
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/evento'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/genericError'
    patch:
      tags:
        - CRUD
      x-senior-visibility: PRIVATE
      parameters:
        - name: id
          in: path
          required: true
          type: string
        - name: entity
          in: body
          required: true
          schema:
            $ref: '#/definitions/evento'
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/evento'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/genericError'
    get:
      tags:
        - CRUD
      x-senior-visibility: PRIVATE
      parameters:
        - name: id
          in: path
          required: true
          type: string
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/evento'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/genericError'
    delete:
      tags:
        - CRUD
      x-senior-visibility: PRIVATE
      parameters:
        - name: id
          in: path
          required: true
          type: string
      responses:
        200:
          description: Ok
        default:
          description: Error response
          schema:
            $ref: '#/definitions/genericError'
  
  /basico/entities/evento/bulk:
    post:
      tags:
        - Bulk
      parameters:
        - name: entities
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/evento'
      responses:
        200:
          description: 'The bulk creation has created resources'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/genericError'
  
  /basico/entities/sala:
    post:
      tags:
        - CRUD
      x-senior-visibility: PRIVATE
      parameters:
        - name: entity
          in: body
          required: true
          schema:
            type: object
            allOf:
              $ref: '#/definitions/sala'
      responses:
        200:
          description: 'The created resource'
          schema:
            $ref: '#/definitions/sala'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/genericError'
    patch:
      tags:
        - CRUD
      x-senior-visibility: PRIVATE
      parameters:
        - name: entity
          in: body
          required: true
          schema:
            type: object
            allOf:
              $ref: '#/definitions/sala'
      responses:
        200:
          description: 'The created resource'
          schema:
            $ref: '#/definitions/sala'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/genericError'
    get:
      tags:
        - CRUD
      x-senior-visibility: PRIVATE
      parameters:
        - name: offset
          in: query
          type: number
        - name: size
          in: query
          type: number
      responses:
        200:
          description: Ok
          schema:
            type: array
            items:
              $ref: '#/definitions/sala'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/genericError'
  
  /basico/entities/sala/{id}:
    put:
      tags:
        - CRUD
      x-senior-visibility: PRIVATE
      parameters:
        - name: id
          in: path
          required: true
          type: string
        - name: entity
          in: body
          required: true
          schema:
            $ref: '#/definitions/sala'
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/sala'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/genericError'
    patch:
      tags:
        - CRUD
      x-senior-visibility: PRIVATE
      parameters:
        - name: id
          in: path
          required: true
          type: string
        - name: entity
          in: body
          required: true
          schema:
            $ref: '#/definitions/sala'
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/sala'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/genericError'
    get:
      tags:
        - CRUD
      x-senior-visibility: PRIVATE
      parameters:
        - name: id
          in: path
          required: true
          type: string
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/sala'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/genericError'
    delete:
      tags:
        - CRUD
      x-senior-visibility: PRIVATE
      parameters:
        - name: id
          in: path
          required: true
          type: string
      responses:
        200:
          description: Ok
        default:
          description: Error response
          schema:
            $ref: '#/definitions/genericError'
  
  /basico/entities/sala/bulk:
    post:
      tags:
        - Bulk
      parameters:
        - name: entities
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/sala'
      responses:
        200:
          description: 'The bulk creation has created resources'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/genericError'
  
  /basico/entities/setor:
    post:
      tags:
        - CRUD
      x-senior-visibility: PRIVATE
      parameters:
        - name: entity
          in: body
          required: true
          schema:
            type: object
            allOf:
              $ref: '#/definitions/setor'
      responses:
        200:
          description: 'The created resource'
          schema:
            $ref: '#/definitions/setor'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/genericError'
    patch:
      tags:
        - CRUD
      x-senior-visibility: PRIVATE
      parameters:
        - name: entity
          in: body
          required: true
          schema:
            type: object
            allOf:
              $ref: '#/definitions/setor'
      responses:
        200:
          description: 'The created resource'
          schema:
            $ref: '#/definitions/setor'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/genericError'
    get:
      tags:
        - CRUD
      x-senior-visibility: PRIVATE
      parameters:
        - name: offset
          in: query
          type: number
        - name: size
          in: query
          type: number
      responses:
        200:
          description: Ok
          schema:
            type: array
            items:
              $ref: '#/definitions/setor'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/genericError'
  
  /basico/entities/setor/{id}:
    put:
      tags:
        - CRUD
      x-senior-visibility: PRIVATE
      parameters:
        - name: id
          in: path
          required: true
          type: string
        - name: entity
          in: body
          required: true
          schema:
            $ref: '#/definitions/setor'
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/setor'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/genericError'
    patch:
      tags:
        - CRUD
      x-senior-visibility: PRIVATE
      parameters:
        - name: id
          in: path
          required: true
          type: string
        - name: entity
          in: body
          required: true
          schema:
            $ref: '#/definitions/setor'
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/setor'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/genericError'
    get:
      tags:
        - CRUD
      x-senior-visibility: PRIVATE
      parameters:
        - name: id
          in: path
          required: true
          type: string
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/setor'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/genericError'
    delete:
      tags:
        - CRUD
      x-senior-visibility: PRIVATE
      parameters:
        - name: id
          in: path
          required: true
          type: string
      responses:
        200:
          description: Ok
        default:
          description: Error response
          schema:
            $ref: '#/definitions/genericError'
  
  /basico/entities/setor/bulk:
    post:
      tags:
        - Bulk
      parameters:
        - name: entities
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/setor'
      responses:
        200:
          description: 'The bulk creation has created resources'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/genericError'
  
  
definitions:
  userNotificationKind:
    description: "User notification kind."
    type: string
    enum:
      - Operational
      - Management
      - News
    
  
  userNotificationPriority:
    description: "User notification priority."
    type: string
    enum:
      - Error
      - Alert
      - None
    
  
  eventEmailFormat:
    description: "Format of the email"
    type: string
    enum:
      - HTML
      - PLAIN_TEXT
    
  
  fieldType:
    description: ""
    type: string
    enum:
      - BINARY
      - BOOLEAN
      - DATE
      - DATETIME
      - DOUBLE
      - ENUM
      - INTEGER
      - MONEY
      - STRING
      - TIME
    
  
  fileFormat:
    description: ""
    type: string
    enum:
      - CSV
      - FLAT
      - JSON
      - XML
    
  
  hookFunction:
    description: ""
    type: string
    enum:
      - BEFORE_PARSE
      - BEFORE_CONVERSION
      - ON_ERROR
      - VALIDATE
    
  
  eventType:
    description: ""
    type: string
    enum:
      - CHUNK
      - DOWNLOAD
      - ERROR
      - FINISH
      - START
    
  
  errorStrategy:
    description: ""
    type: string
    enum:
      - CALL_SCRIPT
      - IGNORE
      - STOP
    
  
  status:
    description: ""
    type: string
    enum:
      - DONE
      - DONE_WITH_ERRORS
      - DOWNLOADING
      - ERROR
      - NOT_STARTED
      - RUNNING
    
  
  errorType:
    description: ""
    type: string
    enum:
      - CONVERT_ERROR
      - SERVICE_ERROR
    
  tipo:
    description: ""
    type: object
    required:
      - nome
      - descricao
    properties:
      id:
        type: string
        format: uuid
        description: ""
      nome:
        type: string
        description: ""
      descricao:
        type: string
        description: ""
  
  evento:
    description: ""
    type: object
    required:
      - nome
      - descricao
      - tipo
    properties:
      id:
        type: string
        format: uuid
        description: ""
      nome:
        type: string
        description: ""
      descricao:
        type: string
        description: ""
      tipo:
        type: object
        allOf:
          $ref: '#/definitions/tipo'
        description: ""
      salas:
        type: array
        items:
          type: object
          allOf:
            $ref: '#/definitions/sala'
        description: ""
  
  sala:
    description: ""
    type: object
    required:
      - nome
      - descricao
    properties:
      id:
        type: string
        format: uuid
        description: ""
      nome:
        type: string
        description: ""
      descricao:
        type: string
        description: ""
      setores:
        type: array
        items:
          type: object
          allOf:
            $ref: '#/definitions/setor'
        description: ""
      evento:
        type: array
        items:
          type: object
          allOf:
            $ref: '#/definitions/evento'
        description: ""
  
  setor:
    description: ""
    type: object
    required:
      - nome
      - descricao
      - sala
    properties:
      id:
        type: string
        format: uuid
        description: ""
      nome:
        type: string
        description: ""
      descricao:
        type: string
        description: ""
      sala:
        type: object
        allOf:
          $ref: '#/definitions/sala'
        description: ""
  
  notifyUserEventPayload:
    description: "Represents a regular user event notification payload"
    discriminator: _discriminator
    type: object
    required:
      - notificationKind
      - notificationPriority
      - notificationSubject
      - notificationContent
      - sourceDomain
      - sourceService
      - destinationUser
      - _discriminator
    properties:
      notificationClass:
        type: string
        description: "Class of notification"
      notificationOrigin:
        type: string
        description: "Origin of notification. Free text. Optional."
      notificationKind:
        type: string
        allOf:
        - $ref: '#/definitions/userNotificationKind'
        description: "Notification kind."
      notificationPriority:
        type: string
        allOf:
        - $ref: '#/definitions/userNotificationPriority'
        description: "Notification priority."
      notificationSubject:
        type: string
        description: "Notification subject."
      notificationContent:
        type: string
        description: "Notification content."
      sourceDomain:
        type: string
        description: "Domain that generates the notification."
      sourceService:
        type: string
        description: "Service that generates the notification."
      destinationUser:
        type: string
        description: "Username of the destination user."
      link:
        type: string
        description: "Notification link"
      _discriminator:
        type: string
        description: ""
  
  emailNotifyUserEventPayload:
    description: "Represents an email notification payload"
    allOf:
    - $ref: '#/definitions/notifyUserEventPayload'
    - 
      type: object
      required:
        - from
      properties:
        from:
          type: string
          description: "Email sender address"
        sendTo:
          type: array
          items:
            type: string
          description: "Additional recipients to send the email to"
        format:
          type: string
          allOf:
          - $ref: '#/definitions/eventEmailFormat'
          description: "Email format"
  
  pushNotifyUserEventPayload:
    description: "Represents a push notification payload"
    allOf:
    - $ref: '#/definitions/notifyUserEventPayload'
    - 
      type: object
      required:
        - applicationId
      properties:
        applicationId:
          type: string
          description: "Apple/Google application id"
  
  blobReference:
    description: "Default blob reference type. Every service defines its own."
    type: object
    required:
      - targetObjectId
    properties:
      domainName:
        type: string
        description: "The domain the blob belongs to."
      serviceName:
        type: string
        description: "The service the blob belongs to."
      targetObjectId:
        type: string
        description: "The basic id of the blob."
      targetCopyId:
        type: string
        description: "The id of the blob copy."
  
  basicErrorPayload:
    description: "Default error payload type. Every service defines its own."
    type: object
    properties:
      message:
        type: string
        description: "The user-facing error message, if any."
      errorCode:
        type: string
        description: "The program-accessible (and service-specific) error code."
  
  importError:
    description: ""
    type: object
    required:
      - errorType
      - lineNumber
      - bean
      - message
      - exceptionClass
    properties:
      errorType:
        type: string
        allOf:
        - $ref: '#/definitions/errorType'
        description: ""
      lineNumber:
        type: integer
        format: int64
        description: ""
      bean:
        type: string
        description: ""
      message:
        type: string
        description: ""
      exceptionClass:
        type: string
        description: ""
  
  fielddto:
    description: ""
    type: object
    required:
      - id
      - name
      - fieldType
    properties:
      id:
        type: integer
        format: int64
        description: ""
      name:
        type: string
        description: ""
      fieldType:
        type: string
        allOf:
        - $ref: '#/definitions/fieldType'
        description: ""
      start:
        type: integer
        format: int64
        description: ""
      size:
        type: integer
        format: int64
        description: ""
      maskPattern:
        type: string
        description: ""
  
  hookdto:
    description: ""
    type: object
    required:
      - hookFunction
      - script
    properties:
      hookFunction:
        type: string
        allOf:
        - $ref: '#/definitions/hookFunction'
        description: ""
      script:
        type: string
        description: ""
  
  layoutdto:
    description: ""
    type: object
    required:
      - id
      - description
      - fileFormat
      - errorStrategy
      - skipLines
      - fields
    properties:
      id:
        type: integer
        format: int64
        description: ""
      description:
        type: string
        description: ""
      fileFormat:
        type: string
        allOf:
        - $ref: '#/definitions/fileFormat'
        description: ""
      errorStrategy:
        type: string
        allOf:
        - $ref: '#/definitions/errorStrategy'
        description: ""
      delimiter:
        type: string
        description: ""
      skipLines:
        type: integer
        format: int64
        description: ""
      fields:
        type: array
        items:
          type: object
          allOf:
            $ref: '#/definitions/fielddto'
          minimum: 1
        description: ""
      hooks:
        type: array
        items:
          type: object
          allOf:
            $ref: '#/definitions/hookdto'
        description: ""
  
  importReport:
    description: ""
    type: object
    required:
      - id
      - startTime
      - endTime
      - uri
      - beanClass
      - serviceClass
      - layout
      - sucessCount
      - errorsCount
      - filteredCount
      - skippedCount
    properties:
      id:
        type: string
        description: ""
      startTime:
        type: string
        format: date-time
        description: ""
      endTime:
        type: string
        format: date-time
        description: ""
      uri:
        type: string
        description: ""
      beanClass:
        type: string
        description: ""
      serviceClass:
        type: string
        description: ""
      layout:
        type: object
        allOf:
          $ref: '#/definitions/layoutdto'
        description: ""
      sucessCount:
        type: integer
        format: int64
        description: ""
      errorsCount:
        type: integer
        format: int64
        description: ""
      filteredCount:
        type: integer
        format: int64
        description: ""
      skippedCount:
        type: integer
        format: int64
        description: ""
      importErrors:
        type: array
        items:
          type: object
          allOf:
            $ref: '#/definitions/importError'
        description: ""
  
  exportEventStatus:
    description: ""
    type: object
    required:
      - importerId
      - eventType
      - recordCount
    properties:
      importerId:
        type: string
        description: ""
      eventType:
        type: string
        allOf:
        - $ref: '#/definitions/eventType'
        description: ""
      recordCount:
        type: integer
        format: int64
        description: ""
  
  importEventStatus:
    description: ""
    type: object
    required:
      - importerId
      - eventType
      - status
      - recordCount
    properties:
      importerId:
        type: string
        description: ""
      eventType:
        type: string
        allOf:
        - $ref: '#/definitions/eventType'
        description: ""
      status:
        type: string
        allOf:
        - $ref: '#/definitions/status'
        description: ""
      errorMessage:
        type: string
        description: ""
      recordCount:
        type: integer
        format: int64
        description: ""
      importReport:
        type: object
        allOf:
          $ref: '#/definitions/importReport'
        description: ""
  
  exportConfig:
    description: ""
    type: object
    required:
      - uri
      - layout
      - async
      - errorStrategy
    properties:
      uri:
        type: string
        description: ""
      layout:
        type: object
        allOf:
          $ref: '#/definitions/layoutdto'
        description: ""
      async:
        type: boolean
        description: ""
      errorStrategy:
        type: string
        description: ""
  
  importConfig:
    description: ""
    type: object
    required:
      - uri
      - layout
      - async
      - batchSize
      - errorStrategy
    properties:
      uri:
        type: string
        description: ""
      layout:
        type: object
        allOf:
          $ref: '#/definitions/layoutdto'
        description: ""
      async:
        type: boolean
        description: ""
      batchSize:
        type: integer
        format: int64
        description: ""
      errorStrategy:
        type: string
        allOf:
        - $ref: '#/definitions/errorStrategy'
        description: ""
  
  dependency:
    description: "Represents a service dependency"
    type: object
    required:
      - domain
      - service
      - version
    properties:
      domain:
        type: string
        description: "Domain of the dependency service"
      service:
        type: string
        description: "Name of the dependency service"
      version:
        type: string
        description: "Version of the dependency service"
  
  genericError:
    properties:
      message:
        type: string
        description: Messaging describing the error.
      reason:
        type: string
        description: A symbolic code identifying the category of the reason of the error.
        enum:
          - BAD_REQUEST
          - UNAUTHORIZED
          - PAYMENT_REQUIRED
          - FORBIDDEN
          - OBJECT_NOT_FOUND
          - REQUEST_TIMEOUT
          - GONE
          - UNPROCESSABLE
          - INTERNAL_ERROR
          - NOT_IMPLEMENTED
          - SERVICE_UNAVAILABLE
          - INSUFFICIENT_STORAGE
